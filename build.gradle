plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.4'
    id 'com.github.edeandrea.xjc-generation' version '1.6'
    id 'com.google.cloud.tools.jib' version '3.4.1'
}

group = 'guru'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.grpc:spring-grpc-dependencies:0.4.0-SNAPSHOT'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation('org.springframework.boot:spring-boot-starter-web-services') {//soap
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    runtimeOnly 'org.postgresql:postgresql:42.7.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.flywaydb:flyway-core:10.17.1'
    implementation 'org.flywaydb:flyway-database-postgresql:10.17.1'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'com.tailrocks.graphql:graphql-datetime-spring-boot-starter:6.0.0'
    //soap
    implementation 'wsdl4j:wsdl4j:1.6.3'
    xjc 'org.glassfish.jaxb:jaxb-xjc:4.0.5'

    //grpc
    implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
    implementation "com.google.protobuf:protobuf-java-util:${dependencyManagement.importedProperties['protobuf-java.version']}"
    implementation 'io.grpc:grpc-services'
}

xjcGeneration {
    defaultAdditionalXjcOptions = ['encoding': 'UTF-8']
    schemas {
        wsdlSchema {
            schemaRootDir = "$projectDir/src/main/resources"
            schemaFile = 'country.xsd'
            javaPackageName = 'guru.xml.country'
            sourceSet = 'main'
        }
    }
}

sourceSets {
    main {
        java {
            srcDir('src/main/java')
            srcDir("$buildDir/generated-sources/main/xjc")
        }
    }
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${dependencyManagement.importedProperties['protobuf-java.version']}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${dependencyManagement.importedProperties['grpc.version']}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                option 'jakarta_omit'
                option '@generated=omit'
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
